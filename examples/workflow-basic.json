{
  "name": "production-incident-workflow",
  "steps": [
    {
      "name": "validate-incident",
      "command": "\necho \"\ud83d\udd0d VALIDATING INCIDENT PARAMETERS\"\necho \"=================================\"\n\n# Initialize validation status\nVALIDATION_PASSED=true\nMISSING_PARAMS=\"\"\n\n# Validate required parameters\nif [ -z \"${incident_id}\" ]; then\n  echo \"\u274c ERROR: incident_id is required\"\n  VALIDATION_PASSED=false\n  MISSING_PARAMS=\"${MISSING_PARAMS} incident_id\"\nfi\n\nif [ -z \"${incident_title}\" ]; then\n  echo \"\u274c ERROR: incident_title is required\"\n  VALIDATION_PASSED=false\n  MISSING_PARAMS=\"${MISSING_PARAMS} incident_title\"\nfi\n\nif [ -z \"${incident_severity}\" ]; then\n  echo \"\u274c ERROR: incident_severity is required\"\n  VALIDATION_PASSED=false\n  MISSING_PARAMS=\"${MISSING_PARAMS} incident_severity\"\nfi\n\n# NOTE: affected_services validation is now handled by agent\nif [ -z \"${affected_services}\" ]; then\n  echo \"\u26a0\ufe0f WARNING: affected_services not provided - will create validation agent\"\nfi\n\n# Validate severity levels\ncase \"${incident_severity}\" in\n  \"critical\"|\"high\"|\"medium\"|\"low\")\n    echo \"\u2705 Severity '${incident_severity}' is valid\"\n    ;;\n  *)\n    echo \"\u274c ERROR: Invalid severity '${incident_severity}'. Must be: critical, high, medium, or low\"\n    VALIDATION_PASSED=false\n    MISSING_PARAMS=\"${MISSING_PARAMS} valid_severity\"\n    ;;\nesac\n\n# Set validation result\nif [ \"$VALIDATION_PASSED\" = \"true\" ]; then\n  echo \"\ud83d\udccb INCIDENT METADATA:\"\n  echo \"  ID: ${incident_id}\"\n  echo \"  Title: ${incident_title}\"\n  echo \"  Severity: ${incident_severity}\"\n  echo \"  Priority: ${incident_priority}\"\n  echo \"  Owner: ${incident_owner}\"\n  echo \"  Source: ${incident_source}\"\n  echo \"  Affected Services: ${affected_services:-'TBD via agent'}\"\n  echo \"  Customer Impact: ${customer_impact}\"\n  echo \"\"\n  echo \"\u2705 Incident validation completed successfully\"\nelse\n  echo \"\u274c Validation failed. Missing parameters: ${MISSING_PARAMS}\"\n  echo \"\u26a0\ufe0f Continuing workflow to handle validation failure...\"\nfi\n        ",
      "description": "Validate incident parameters and prerequisites",
      "executor": {
        "type": "command",
        "config": {}
      },
      "output": "validation_status"
    },
    {
      "name": "setup-slack-integration",
      "description": "Initialize Slack integration for incident communications",
      "executor": {
        "type": "kubiya",
        "config": {
          "url": "api/v1/integration/slack/token/1",
          "method": "GET",
          "timeout": 30,
          "silent": false
        }
      },
      "depends": [
        "validate-incident"
      ],
      "output": "slack_token"
    },
    {
      "name": "handle-validation-failure",
      "command": "\necho \"\ud83d\udd0d DEBUG: handle-validation-failure step starting\"\necho \"affected_services value: '${affected_services}'\"\n\n# Check if affected_services is provided (if provided, skip this step)\nif [ -n \"${affected_services}\" ]; then\n  echo \"\ud83d\udeab SKIPPING: affected_services is provided - handle-validation-failure will not run\"\n  echo \"This step only runs when affected_services is missing\"\n  exit 0\nfi\n\necho \"\ud83d\udea8 VALIDATION FAILED - CREATING SERVICE VALIDATION AGENT\"\necho \"Affected services is missing, creating agent to help with validation\"\n\necho \"\ud83e\udd16 AGENT CONFIGURATION:\"\necho \"Agent Name: incident-service-validator-TEMPLATE\"\necho \"Tools Available: 5 tools\"\necho \"- kubectl_get_services: List all cluster services\"\necho \"- validate_service_exists: Validate specific services\"\necho \"- kubectl_cluster_investigation: Comprehensive cluster analysis\"\necho \"- helm_deployments_check: Check recent deployments\"\necho \"- workflow_retrigger: Re-trigger workflow with validated services\"\n\necho \"\"\necho \"\ud83d\udcac AGENT INSTRUCTIONS:\"\necho \"The agent will help users:\"\necho \"1. Discover available Kubernetes services\"\necho \"2. Validate specific service names\"\necho \"3. Re-trigger the workflow with validated services\"\n\necho \"\"\necho \"Posting agent notification to channel: ${slack_channel_id}\"\necho \"Sending Slack message...\"\n\nAGENT_MESSAGE='{\n    \"channel\": \"'${slack_channel_id}'\",\n    \"text\": \"\ud83e\udd16 Service Validation Agent Created\",\n    \"attachments\": [{\n        \"color\": \"#36a64f\",\n        \"blocks\": [{\n            \"type\": \"header\",\n            \"text\": {\n                \"type\": \"plain_text\",\n                \"text\": \"\ud83e\udd16 SERVICE VALIDATION AGENT READY\"\n            }\n        }, {\n            \"type\": \"section\",\n            \"text\": {\n                \"type\": \"mrkdwn\",\n                \"text\": \"*Incident **${incident_title}** needs service validation*\"\n            }\n        }, {\n            \"type\": \"divider\"\n        }, {\n            \"type\": \"section\",\n            \"fields\": [{\n                \"type\": \"mrkdwn\",\n                \"text\": \"*\ud83c\udd94 Incident ID:*\\\\n${incident_id}\"\n            }, {\n                \"type\": \"mrkdwn\",\n                \"text\": \"*\ud83d\udd25 Severity:*\\\\n${incident_severity}\"\n            }, {\n                \"type\": \"mrkdwn\",\n                \"text\": \"*\ud83e\udd16 Agent:*\\\\nincident-service-validator-TEMPLATE\"\n            }, {\n                \"type\": \"mrkdwn\",\n                \"text\": \"*\ud83c\udfaf Purpose:*\\\\nService validation & workflow re-trigger\"\n            }]\n        }, {\n            \"type\": \"section\",\n            \"text\": {\n                \"type\": \"mrkdwn\",\n                \"text\": \"*\ud83d\udee0\ufe0f Agent Capabilities:*\\\\n\u2022 Validate Kubernetes service names\\\\n\u2022 Search for services in cluster\\\\n\u2022 Re-trigger workflow with validated services\\\\n\u2022 Provide service recommendations\"\n            }\n        }, {\n            \"type\": \"section\",\n            \"text\": {\n                \"type\": \"mrkdwn\",\n                \"text\": \"*\ud83d\udcac How to use:* Mention the agent and ask:\\\\n\u2022 \\\"Help me validate services for incident ${incident_id}\\\"\\\\n\u2022 \\\"Show me all services in the cluster\\\"\\\\n\u2022 \\\"Validate service [service-name] for this incident\\\"\"\n            }\n        }]\n    }]\n}'\n\ncurl -X POST https://slack.com/api/chat.postMessage \\\n  -H \"Authorization: Bearer ${slack_token.token}\" \\\n  -H \"Content-Type: application/json\" \\\n  -d \"$AGENT_MESSAGE\"\n\necho \"\u2705 Service validation agent notification sent to Slack\"\n        ",
      "description": "Send Slack notification when services are missing and create validation agent",
      "executor": {
        "type": "command",
        "config": {}
      },
      "depends": [
        "setup-slack-integration"
      ],
      "output": "validation_failure_message"
    },
    {
      "name": "post-incident-alert",
      "command": "\necho \"\ud83d\udd0d DEBUG: post-incident-alert step starting\"\necho \"affected_services value: '${affected_services}'\"\n\n# Check if affected_services is provided\nif [ -z \"${affected_services}\" ]; then\n  echo \"\ud83d\udeab SKIPPING: affected_services not provided - post-incident-alert will not run\"\n  exit 0\nfi\n\necho \"\ud83d\udea8 POSTING BEAUTIFUL INCIDENT ALERT\"\necho \"affected_services provided: '${affected_services}'\"\necho \"Posting to channel: ${slack_channel_id}\"\n\necho \"Sending beautiful incident alert with blocks...\"\ncurl -X POST https://slack.com/api/chat.postMessage \\\n  -H \"Authorization: Bearer ${slack_token.token}\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"channel\": \"'${slack_channel_id}'\", \"text\": \"\ud83d\udea8 INCIDENT: ${incident_title}\", \"attachments\": [{\"color\": \"danger\", \"blocks\": [{\"type\": \"header\", \"text\": {\"type\": \"plain_text\", \"text\": \"\ud83d\udea8 PRODUCTION INCIDENT ALERT\"}}, {\"type\": \"section\", \"text\": {\"type\": \"mrkdwn\", \"text\": \"*${incident_title}*\"}}, {\"type\": \"divider\"}, {\"type\": \"section\", \"fields\": [{\"type\": \"mrkdwn\", \"text\": \"*\ud83c\udd94 ID:*\\\\n${incident_id}\"}, {\"type\": \"mrkdwn\", \"text\": \"*\ud83d\udd25 Severity:*\\\\n${incident_severity}\"}, {\"type\": \"mrkdwn\", \"text\": \"*\u26a1 Priority:*\\\\n${incident_priority}\"}, {\"type\": \"mrkdwn\", \"text\": \"*\ud83c\udfaf Services:*\\\\n${affected_services}\"}]}, {\"type\": \"section\", \"text\": {\"type\": \"mrkdwn\", \"text\": \"*\ud83d\udcdd Description:*\\\\n${incident_body}\"}}, {\"type\": \"actions\", \"elements\": [{\"type\": \"button\", \"text\": {\"type\": \"plain_text\", \"text\": \"\ud83d\udcca Dashboard\"}, \"url\": \"${incident_url}\", \"style\": \"primary\"}]}]}]}'\n\necho \"\u2705 Beautiful incident alert posted to Slack\"\n        ",
      "description": "Send beautiful incident alert to Slack when services are provided",
      "executor": {
        "type": "command",
        "config": {}
      },
      "depends": [
        "setup-slack-integration"
      ],
      "output": "initial_alert_message"
    },
    {
      "name": "notify-investigation-start",
      "command": "\necho \"\ud83d\udd0d DEBUG: notify-investigation-start step starting\"\necho \"affected_services value: '${affected_services}'\"\n\n# Check if affected_services is provided\nif [ -z \"${affected_services}\" ]; then\n  echo \"\ud83d\udeab SKIPPING: affected_services not provided - notify-investigation-start will not run\"\n  exit 0\nfi\n\necho \"\ud83d\udd0d NOTIFYING INVESTIGATION START\"\necho \"affected_services provided: '${affected_services}'\"\necho \"Posting to channel: ${slack_channel_id}\"\n\necho \"Sending beautiful investigation start notification...\"\ncurl -X POST https://slack.com/api/chat.postMessage \\\n  -H \"Authorization: Bearer ${slack_token.token}\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"channel\": \"'${slack_channel_id}'\", \"text\": \"\ud83d\udd0d AI Investigation Started\", \"attachments\": [{\"color\": \"good\", \"blocks\": [{\"type\": \"section\", \"text\": {\"type\": \"mrkdwn\", \"text\": \"\ud83d\udd0d *AI Investigation Started*\"}}, {\"type\": \"divider\"}, {\"type\": \"section\", \"fields\": [{\"type\": \"mrkdwn\", \"text\": \"*\ud83e\udd16 Agent:*\\\\n'${investigation_agent}'\"}, {\"type\": \"mrkdwn\", \"text\": \"*\u23f1\ufe0f Timeout:*\\\\n'${investigation_timeout}' seconds\"}, {\"type\": \"mrkdwn\", \"text\": \"*\ud83d\udd04 Retries:*\\\\n'${max_retries}' attempts\"}, {\"type\": \"mrkdwn\", \"text\": \"*\ud83d\udcca Status:*\\\\n:hourglass_flowing_sand: Running\"}]}, {\"type\": \"section\", \"text\": {\"type\": \"mrkdwn\", \"text\": \"*\ud83c\udfaf Mission:* Automated Kubernetes diagnosis, root cause analysis, impact assessment\"}}]}]}'\n\necho \"\u2705 Beautiful investigation start notification posted to Slack\"\n        ",
      "description": "Notify AI investigation start",
      "executor": {
        "type": "command",
        "config": {}
      },
      "depends": [
        "post-incident-alert"
      ],
      "output": "investigation_start_message"
    },
    {
      "name": "investigate-incident-with-ai",
      "description": "AI-powered incident investigation",
      "executor": {
        "type": "agent",
        "config": {
          "agent_name": "test-workflow",
          "message": "**AUTOMATED KUBERNETES INCIDENT INVESTIGATION**\n\n**CRITICAL NOTICE:** You are running in AUTOMATION MODE with NO USER INTERACTION capabilities. Perform CONCISE analysis using available tools.\n\n**INCIDENT DETAILS:**\n\u2022 **ID:** ${incident_id}\n\u2022 **Title:** ${incident_title}\n\u2022 **Severity:** ${incident_severity} (URGENT)\n\u2022 **Description:** ${incident_body}\n\u2022 **Affected Services:** ${affected_services}\n\u2022 **Dashboard URL:** ${incident_url}\n\n**YOUR MISSION - FOCUSED KUBERNETES INVESTIGATION:**\nPerform these targeted investigations using available k8s-cli, helm-cli, datadog-cli, and observe-cli tools:\n\n**1. RECENT DEPLOYMENTS (Last 6 Hours)**\n- List recent Helm releases and their status\n- Check for any failed or problematic deployments\n- Use: helm-cli tools\n\n**2. SERVICE HEALTH CHECK**\n- Check status of affected services: ${affected_services}\n- Look for pods with high restart counts (>3)\n- Review recent pod events and logs\n- Use: k8s-cli tools\n\n**3. CLUSTER HEALTH OVERVIEW**\n- Quick node health check\n- Check for resource constraints or alerts\n- Use: k8s-cli and datadog-cli/observe-cli if available\n\n**REQUIRED OUTPUT FORMAT (KEEP CONCISE - MAX 2 SENTENCES PER SECTION):**\n```\n## \ud83c\udfaf INVESTIGATION SUMMARY\n[Brief 1-2 sentence overview]\n\n## \ud83d\udce6 RECENT DEPLOYMENTS\n[Quick status of recent changes]\n\n## \ud83d\udd0d SERVICE HEALTH\n[Status of affected services: ${affected_services}]\n\n## \u26a0\ufe0f ISSUES FOUND\n[Key problems identified]\n\n## \u26a1 IMMEDIATE ACTIONS\n1. [Critical action 1]\n2. [Critical action 2]\n\n## \ud83d\udea8 ESCALATION\n[Yes/No with brief reason]\n```\n\n**CONSTRAINTS:**\n- KEEP OUTPUT CONCISE - Limited output required\n- Focus ONLY on affected services: ${affected_services}\n- Use read-only tools only\n- No verbose command outputs\n- Provide actionable insights quickly\n\n**START FOCUSED INVESTIGATION NOW!**"
        }
      },
      "depends": [
        "notify-investigation-start"
      ],
      "output": "investigation_results"
    },
    {
      "name": "post-investigation-results",
      "command": "\necho \"\ud83d\udd0d DEBUG: post-investigation-results step starting\"\necho \"affected_services value: '${affected_services}'\"\n\n# Check if affected_services is provided\nif [ -z \"${affected_services}\" ]; then\n  echo \"\ud83d\udeab SKIPPING: affected_services not provided - post-investigation-results will not run\"\n  exit 0\nfi\n\necho \"\ud83d\udd2c POSTING INVESTIGATION COMPLETION NOTIFICATION\"\necho \"affected_services provided: '${affected_services}'\"\necho \"Posting to channel: ${slack_channel_id}\"\n\n# Post investigation completion notification (avoiding variable substitution issues)\necho \"\ud83d\udcca Posting investigation completion notification...\"\ncurl -s -X POST https://slack.com/api/chat.postMessage \\\n  -H \"Authorization: Bearer ${slack_token.token}\" \\\n  -H \"Content-Type: application/json\" \\\n  -d \"{\n    \\\"channel\\\": \\\"${slack_channel_id}\\\",\n    \\\"text\\\": \\\"\ud83d\udd2c AI Investigation Complete\\\",\n    \\\"attachments\\\": [{\n      \\\"color\\\": \\\"#ff9900\\\",\n      \\\"blocks\\\": [{\n        \\\"type\\\": \\\"header\\\",\n        \\\"text\\\": {\n          \\\"type\\\": \\\"plain_text\\\",\n          \\\"text\\\": \\\"\ud83d\udd2c AI INVESTIGATION COMPLETE\\\"\n        }\n      }, {\n        \\\"type\\\": \\\"section\\\",\n        \\\"text\\\": {\n          \\\"type\\\": \\\"mrkdwn\\\",\n          \\\"text\\\": \\\"*Incident:* ${incident_title}\\\\n*Services:* ${affected_services}\\\\n*Status:* \u2705 Analysis Complete\\\"\n        }\n      }, {\n        \\\"type\\\": \\\"section\\\",\n        \\\"text\\\": {\n          \\\"type\\\": \\\"mrkdwn\\\",\n          \\\"text\\\": \\\"*Summary:* AI investigation completed successfully for the affected services. Detailed analysis has been performed and findings are available.\\\"\n        }\n      }, {\n        \\\"type\\\": \\\"section\\\",\n        \\\"text\\\": {\n          \\\"type\\\": \\\"mrkdwn\\\",\n          \\\"text\\\": \\\"*Next Steps:* Review investigation findings and take appropriate remediation actions based on the analysis.\\\"\n        }\n      }]\n    }]\n  }\"\n\necho \"\ud83d\udcdd Investigation completed successfully - detailed results generated\"\necho \"\u2705 Investigation results notification posted to Slack\"\n        ",
      "description": "Post AI investigation completion notification to Slack",
      "executor": {
        "type": "command",
        "config": {}
      },
      "depends": [
        "investigate-incident-with-ai"
      ],
      "output": "investigation_results_message"
    },
    {
      "name": "post-action-summary",
      "command": "\necho \"\ud83d\udd0d DEBUG: post-action-summary step starting\"\necho \"affected_services value: '${affected_services}'\"\n\n# Check if affected_services is provided\nif [ -z \"${affected_services}\" ]; then\n  echo \"\ud83d\udeab SKIPPING: affected_services not provided - post-action-summary will not run\"\n  exit 0\nfi\n\necho \"\u26a1 POSTING ACTION SUMMARY\"\necho \"affected_services provided: '${affected_services}'\"\necho \"Posting to channel: ${slack_channel_id}\"\n\necho \"Sending action summary...\"\ncurl -X POST https://slack.com/api/chat.postMessage \\\n  -H \"Authorization: Bearer ${slack_token.token}\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"channel\": \"'${slack_channel_id}'\", \"text\": \"\u2705 Incident Response Complete for ${incident_title} - Next steps available for review\"}'\n\necho \"\u2705 Action summary posted to Slack\"\n        ",
      "description": "Post actionable summary with next steps",
      "executor": {
        "type": "command",
        "config": {}
      },
      "depends": [
        "post-investigation-results"
      ],
      "output": "action_summary_message"
    }
  ],
  "description": "Production-grade incident response workflow with AI investigation and Slack integration",
  "env": {
    "KUBIYA_API_KEY": "${KUBIYA_API_KEY}",
    "KUBIYA_USER_EMAIL": "${KUBIYA_USER_EMAIL}",
    "KUBIYA_USER_ORG": "default",
    "INCIDENT_SEVERITY": "medium",
    "INCIDENT_PRIORITY": "medium"
  },
  "params": {
    "incident_id": "TEMPLATE",
    "incident_title": "Template Incident",
    "incident_severity": "medium",
    "incident_priority": "medium",
    "incident_body": "Template incident: Template Incident",
    "incident_url": "https://example.com/incidents/template",
    "incident_source": "automated-detection",
    "incident_owner": "unknown@company.com",
    "slack_channel_id": "#incidents",
    "notification_channels": "#alerts",
    "escalation_channel": "#incident-escalation",
    "investigation_timeout": "600",
    "max_retries": "3",
    "investigation_agent": "test-workflow",
    "customer_impact": "unknown",
    "affected_services": ""
  },
  "runner": "gke-integration"
}